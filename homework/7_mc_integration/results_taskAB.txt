Task A+B:

Integration of x*x+y*y<0.9*0.9 (1 inside circle of R=0.9 and 0 outside) from 0 to 1 in both x and y with N=1000000:
Exact = 0.636173
Pseudo-random:
Integral = 0.636506
Error estimate = 0.000481
Actual error = 0.000333
Quasi-random:
Integral = 0.636163
Error estimate = 0.000005
Actual error = 0.000010

Integration of 1/sqrt(x*y) from 0 to 1 in both x and y with N=1000000:
Exact = 4.000000
Pseudo-random:
Integral = 3.982286
Error estimate = 0.010997
Actual error = 0.017714
Quasi-random:
Integral = 3.987481
Error estimate = 0.001331
Actual error = 0.012519

Integration of (1/pi^3)*(1/(1-cos(x)*cos(y)*cos(z))) from 0 to pi in both x,y and z with N=1000000:
Exact = 1.393204
Pseudo-random:
Integral = 1.378236
Error estimate = 0.005820
Actual error = 0.014968
Quasi-random:
Integral = 1.381219
Error estimate = 0.000424
Actual error = 0.011985

The error comparison of the pseudo-random and quasi-random Monete carlo integrator is seen in error.plot.png for the integral (1/pi^3)*(1/(1-cos(x)*cos(y)*cos(z))). For some reason, the data generated by the pseudo-random MC integrator on my computer produces these quick jumps once in a while and I don't know why. However there is still a trend that the error decreases faster for the quasi-random MC integrator as a function of N than the pseudo-random MC integrator.